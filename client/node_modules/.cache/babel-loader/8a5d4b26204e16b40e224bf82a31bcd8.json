{"ast":null,"code":"var _jsxFileName = \"/Users/wafaa.nasr/Documents/Study/learn-react/crwn-clothing/client/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport { signUpStart } from \"../../redux/user/user.action\";\nimport CustomButton from '../custom-button/custom-button.component';\nimport FormInput from '../form-input/form-input.component';\nimport { SignUpContainer } from './sign-up.styles.jsx';\n\nconst SignUp = ({\n  userSignUpStart\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    email: '',\n    displayName: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Password doesn't match!\");\n      return;\n    }\n\n    userSignUpStart({\n      email,\n      password,\n      displayName\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return React.createElement(SignUpContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"I do not have a account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    autoComplete: \"displayName\",\n    label: \"Display Name\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    autoComplete: \"email\",\n    label: \"Email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    autoComplete: \"password\",\n    label: \"Password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    autoComplete: \"confirmPassword\",\n    label: \"Confirm Password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Sign Up\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  userSignUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/wafaa.nasr/Documents/Study/learn-react/crwn-clothing/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","signUpStart","CustomButton","FormInput","SignUpContainer","SignUp","userSignUpStart","userCredentials","setUserCredentials","email","displayName","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,WAAT,QAA4B,8BAA5B;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AAEA,SAASC,eAAT,QAAgC,sBAAhC;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAyB;AAEpC,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC;AAAEU,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,WAAW,EAAE,EAA1B;AAA8BC,IAAAA,QAAQ,EAAE,EAAxC;AAA4CC,IAAAA,eAAe,EAAE;AAA7D,GAAD,CAAtD;AACA,QAAM;AAAEF,IAAAA,WAAF;AAAeD,IAAAA,KAAf;AAAsBE,IAAAA,QAAtB;AAAgCC,IAAAA;AAAhC,MAAoDL,eAA1D;;AAEA,QAAMM,YAAY,GAAGC,KAAK,IAAI;AAC1BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIJ,QAAQ,KAAKC,eAAjB,EAAkC;AAAEI,MAAAA,KAAK,CAAC,yBAAD,CAAL;AAAkC;AAAS;;AAC/EV,IAAAA,eAAe,CAAC;AAAEG,MAAAA,KAAF;AAASE,MAAAA,QAAT;AAAmBD,MAAAA;AAAnB,KAAD,CAAf;AACH,GAJD;;AAKA,QAAMO,YAAY,GAAGH,KAAK,IAAI;AAC1B,UAAM;AAAEI,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBL,KAAK,CAACM,MAA9B;AACAZ,IAAAA,kBAAkB,CAAC,EAAE,GAAGD,eAAL;AAAsB,OAACW,IAAD,GAAQC;AAA9B,KAAD,CAAlB;AACH,GAHD;;AAKA,SACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFJ,EAGI;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,QAAQ,EAAEN,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,YAAY,EAAC,aAFjB;AAGI,IAAA,KAAK,EAAC,cAHV;AAII,IAAA,IAAI,EAAC,aAJT;AAKI,IAAA,KAAK,EAAEH,WALX;AAMI,IAAA,QAAQ,EAAEO,YANd;AAOI,IAAA,QAAQ,MAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAUI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,YAAY,EAAC,OAFjB;AAGI,IAAA,KAAK,EAAC,OAHV;AAII,IAAA,IAAI,EAAC,OAJT;AAKI,IAAA,KAAK,EAAER,KALX;AAMI,IAAA,QAAQ,EAAEQ,YANd;AAOI,IAAA,QAAQ,MAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAmBI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,YAAY,EAAC,UAFjB;AAGI,IAAA,KAAK,EAAC,UAHV;AAII,IAAA,IAAI,EAAC,UAJT;AAKI,IAAA,KAAK,EAAEN,QALX;AAMI,IAAA,QAAQ,EAAEM,YANd;AAOI,IAAA,QAAQ,MAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,EA4BI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,YAAY,EAAC,iBAFjB;AAGI,IAAA,KAAK,EAAC,kBAHV;AAII,IAAA,IAAI,EAAC,iBAJT;AAKI,IAAA,KAAK,EAAEL,eALX;AAMI,IAAA,QAAQ,EAAEK,YANd;AAOI,IAAA,QAAQ,MAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BJ,EAqCI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eArCJ,CAHJ,CADJ;AA6CH,CA5DD;;AA6DA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAK;AACpChB,EAAAA,eAAe,EAAEC,eAAe,IAC5Be,QAAQ,CAACrB,WAAW,CAACM,eAAD,CAAZ;AAFwB,CAAL,CAAnC;;AAIA,eAAeP,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkChB,MAAlC,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from 'react-redux';\n\nimport { signUpStart } from \"../../redux/user/user.action\";\nimport CustomButton from '../custom-button/custom-button.component';\nimport FormInput from '../form-input/form-input.component';\n\nimport { SignUpContainer } from './sign-up.styles.jsx';\n\nconst SignUp = ({ userSignUpStart }) => {\n\n    const [userCredentials, setUserCredentials] = useState({ email: '', displayName: '', password: '', confirmPassword: '' });\n    const { displayName, email, password, confirmPassword } = userCredentials;\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        if (password !== confirmPassword) { alert(\"Password doesn't match!\"); return; }\n        userSignUpStart({ email, password, displayName });\n    }\n    const handleChange = event => {\n        const { name, value } = event.target;\n        setUserCredentials({ ...userCredentials, [name]: value });\n    }\n\n    return (\n        <SignUpContainer>\n            <h2 className='title'>I do not have a account</h2>\n            <span>Sign up with your email and password</span>\n            <form className='sign-up-form' onSubmit={handleSubmit}>\n                <FormInput\n                    type='text'\n                    autoComplete='displayName'\n                    label='Display Name'\n                    name='displayName'\n                    value={displayName}\n                    onChange={handleChange}\n                    required\n                />\n                <FormInput\n                    type='email'\n                    autoComplete='email'\n                    label='Email'\n                    name='email'\n                    value={email}\n                    onChange={handleChange}\n                    required\n                />\n                <FormInput\n                    type='password'\n                    autoComplete='password'\n                    label='Password'\n                    name='password'\n                    value={password}\n                    onChange={handleChange}\n                    required\n                />\n                <FormInput\n                    type='password'\n                    autoComplete='confirmPassword'\n                    label='Confirm Password'\n                    name='confirmPassword'\n                    value={confirmPassword}\n                    onChange={handleChange}\n                    required\n                />\n                <CustomButton type='submit'>Sign Up</CustomButton>\n            </form>\n        </SignUpContainer>\n    );\n}\nconst mapDispatchToProps = dispatch => ({\n    userSignUpStart: userCredentials =>\n        dispatch(signUpStart(userCredentials))\n})\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}