{"ast":null,"code":"var _jsxFileName = \"/Users/wafaa.nasr/Documents/Study/learn-react/crwn-clothing/client/src/components/sign-in/sign-in.component.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.action';\nimport { SignInContainer, ButtonContainer } from './sign-in.styles';\n\nconst SignIn = ({\n  signInWithGoogle,\n  signInWithEmail\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!(email && password)) return;\n    signInWithEmail(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return React.createElement(SignInContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    label: \"Email\",\n    autoComplete: \"email\",\n    required: true,\n    type: \"email\",\n    value: email,\n    handleChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    required: true,\n    autoComplete: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    value: password,\n    handleChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(ButtonContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    name: \"submit\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Sign In\"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: signInWithGoogle,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Sign In with Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signInWithGoogle: () => dispatch(googleSignInStart()),\n  signInWithEmail: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/wafaa.nasr/Documents/Study/learn-react/crwn-clothing/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignInContainer","ButtonContainer","SignIn","signInWithGoogle","signInWithEmail","userCredentials","setUserCredentials","email","password","handleSubmit","event","preventDefault","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from 'react-redux';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.action';\n\nimport { SignInContainer, ButtonContainer } from './sign-in.styles';\n\nconst SignIn = ({ signInWithGoogle, signInWithEmail }) => {\n\n    const [userCredentials, setUserCredentials] = useState({ email: '', password: '' });\n    const { email, password } = userCredentials;\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n        if (!(email && password)) return;\n        signInWithEmail(email, password);\n    }\n    const handleChange = event => {\n        const { name, value } = event.target;\n        setUserCredentials({ ...userCredentials, [name]: value });\n    }\n\n    return (\n        <SignInContainer>\n            <h2>I already have an account</h2>\n            <span>Sign in with your email and password</span>\n            <form onSubmit={handleSubmit}>\n                <FormInput name='email' label='Email' autoComplete='email' required type='email' value={email} handleChange={handleChange} />\n                <FormInput name='password' required autoComplete='password' label='Password' type='password' value={password} handleChange={handleChange} />\n                <ButtonContainer>\n                    <CustomButton name='submit' type='submit' >Sign In</CustomButton>\n                    <CustomButton type='button' onClick={signInWithGoogle} isGoogleSignIn>Sign In with Google</CustomButton>\n                </ButtonContainer>\n            </form>\n        </SignInContainer>\n    )\n}\nconst mapDispatchToProps = dispatch => ({\n    signInWithGoogle: () => dispatch(googleSignInStart()),\n    signInWithEmail: (email, password) => dispatch(emailSignInStart({ email, password }))\n})\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}