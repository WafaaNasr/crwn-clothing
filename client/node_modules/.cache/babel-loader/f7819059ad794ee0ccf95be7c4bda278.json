{"ast":null,"code":"export const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingItem = cartItems.find(item => item.id === cartItemToAdd.id);\n\n  if (existingItem) {\n    return cartItems.map(item => item.id === cartItemToAdd.id ? { ...item,\n      quantity: item.quantity + 1\n    } : item);\n  }\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const existingItem = cartItems.find(item => item.id === cartItemToRemove.id);\n  if (existingItem.quantity === 1) return cartItems.filter(item => item.id !== cartItemToRemove.id);\n  return cartItems.map(item => item.id === cartItemToRemove.id ? { ...item,\n    quantity: item.quantity - 1\n  } : item);\n};","map":{"version":3,"sources":["/Users/wafaa.nasr/Documents/Study/learn-react/crwn-clothing/client/src/redux/cart/cart.utilities.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingItem","find","item","id","map","quantity","removeItemFromCart","cartItemToRemove","filter"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACvD,QAAMC,YAAY,GAAGF,SAAS,CAACG,IAAV,CAAeC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,aAAa,CAACI,EAAjD,CAArB;;AACA,MAAIH,YAAJ,EAAkB;AACd,WAAOF,SAAS,CAACM,GAAV,CAAcF,IAAI,IACrBA,IAAI,CAACC,EAAL,KAAYJ,aAAa,CAACI,EAA1B,GACI,EAAE,GAAGD,IAAL;AAAWG,MAAAA,QAAQ,EAAEH,IAAI,CAACG,QAAL,GAAgB;AAArC,KADJ,GAEMH,IAHH,CAAP;AAIH;;AACD,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAE,GAAGC,aAAL;AAAoBM,IAAAA,QAAQ,EAAE;AAA9B,GAAf,CAAP;AACH,CATM;AAWP,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,gBAAZ,KAAiC;AAC/D,QAAMP,YAAY,GAAGF,SAAS,CAACG,IAAV,CAAeC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYI,gBAAgB,CAACJ,EAApD,CAArB;AACA,MAAIH,YAAY,CAACK,QAAb,KAA0B,CAA9B,EACI,OAAOP,SAAS,CAACU,MAAV,CAAiBN,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYI,gBAAgB,CAACJ,EAAtD,CAAP;AAEJ,SAAOL,SAAS,CAACM,GAAV,CAAcF,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYI,gBAAgB,CAACJ,EAA7B,GAAkC,EAAE,GAAGD,IAAL;AAAWG,IAAAA,QAAQ,EAAEH,IAAI,CAACG,QAAL,GAAgB;AAArC,GAAlC,GAA6EH,IAAnG,CAAP;AACH,CANM","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\n    const existingItem = cartItems.find(item => item.id === cartItemToAdd.id);\n    if (existingItem) {\n        return cartItems.map(item =>\n            item.id === cartItemToAdd.id ?\n                { ...item, quantity: item.quantity + 1 }\n                : item)\n    }\n    return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\n};\n\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n    const existingItem = cartItems.find(item => item.id === cartItemToRemove.id);\n    if (existingItem.quantity === 1)\n        return cartItems.filter(item => item.id !== cartItemToRemove.id);\n\n    return cartItems.map(item => item.id === cartItemToRemove.id ? { ...item, quantity: item.quantity - 1 } : item);\n};"]},"metadata":{},"sourceType":"module"}